- set_fact:
    package_dir: "{{ project_dir }}/packages/{{ package.type }}"
    package_type: "python-and-template"

- name: "Check if directory for package {{ package.name }} exists"
  stat:
      path: "{{ package_dir }}{{ package.name }}"
  register: package_dir_status

- name: "Create {{ package_dir }} directory"
  file:
       path: "{{ package_dir }}"
       state: directory

- name: "Create skeleton for package {{ package.name }}"
  shell: "source {{ nso_install_dir }}/ncsrc &&  ncs-make-package  --service-skeleton {{ package_type }} {{ package.name }}"
  args:
    chdir: "{{ package_dir }}"
    executable: /bin/bash
  when:
    package_dir_status.stat.exists == False and (package.type == 'dev' or package.type =='standard')

- name: "Copy YANG modules for standard package{{ package.name }}"
  get_url:
    url: https://raw.githubusercontent.com/YangModels/yang/master/standard/{{ package.org }}/{{ item.branch }}/{{ item.name }}%40{{ item.version }}.yang
    dest: "{{ package_dir }}/{{ package.name }}/src/yang/{{ item.name }}.yang"
  loop:
      "{{ package.yang_modules }}"
  when:
    package.type == 'standard'

- name: "Delete default template for standard package {{ package.name }}"
  file:
    path: "{{ package_dir }}/{{ package.name }}/templates/{{ package.name }}-template.xml"
    state: absent
  when:
    package.type == 'standard'

- name: "Change makefile for standard package {{ package.name }}"
  lineinfile:
    path: "{{ package_dir }}/{{ package.name }}/src/Makefile"
    insertbefore: '^NCSCPATH.*'
    line: 'YANGPATH += yang/'
  when:
    package.type == 'standard'

- name: "Clone package {{ package.name }} from git"
  git:
    repo: "{{ package.git_clone.url }}"
    dest: "{{ package_dir }}/{{ package.name }}"
  when:
    package.type == 'git_clone'

- name: "Create symbolic link from run-time directory for package {{ package.name }}"
  file:
    src: "{{ shared_packages_localhost_dir }}/{{ package.name }}"
    dest: "{{ package_dir }}/{{ package.name }}"
    state: link
  when:
    package.type == 'shared'

- name: "Compile package"
  include_role:
      name: dev/make_package
  vars:
      package_name: "{{ package.name }}"
      package_parent_dir: "{{ package_dir }}"

#- name: "Create symbolic link from run-time directory for package {{ package.name }}"
#  file:
#    src: "{{ package_dir }}/{{ package.name }}"
#    dest: "{{ project_run_dir }}/packages/{{ package.name }}"
#    state: link

#- name: "Check if package {{ package.name }} exists"
#  stat:
#      path: "{{ project_dir }}/dev/packages/{{ package.name }}"
#  register: package_dev_dir_status

#  when:
#     package_dev_dir_status.stat.exists == False

# https://raw.githubusercontent.com/YangModels/yang/master/standard/ietf/RFC/ietf-network-topology%402018-02-26.yang
# https://raw.githubusercontent.com/YangModels/yang/master/standard/ietf/RFC/ietf-network%402018-02-26.yang
-

