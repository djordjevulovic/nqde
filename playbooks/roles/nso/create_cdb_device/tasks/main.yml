- debug:
    var=ned_list_only_other_full_unique

- name: Set ned_for_device variable
  set_fact:
#     ned_name_for_device: "{{ ned_list_only_other_full_name | map('regex_search','.*%s.*'|format(create_device_ned)) | first }}"
    ned_for_device: "{{ ned_list_only_other_full_unique |  selectattr('name', 'equalto', create_device_ned) | first }}"

- name: Set ned_name_for_device variable
  set_fact:
    ned_name_for_device: "{{ ned_for_device.name }}-{{ ned_for_device.type }}-{{ ned_for_device.version }}"

- name: Set ned_type_for_device variable
  set_fact:
      ned_type_for_device: "{{ ned_list | selectattr('name', 'equalto', create_device_ned) | first }}"

- name: Set create_device_device_type variable for generic device
  set_fact:
      create_device_device_type:
        generic:
          ned-id: "{{ ned_name_for_device }}"
  when:
    ned_type_for_device.type == 'gen'

- name: Set create_device_device_type variable for CLI device
  set_fact:
      create_device_device_type:
        cli:
          ned-id: "{{ ned_name_for_device }}"
  when:
    ned_type_for_device.type == 'cli'

- name: "Create generic device {{ create_device_name }} in CDB"
  include_role:
     name: nso/create_cdb_node
  vars:
     node_data: 
       tailf-ncs:devices:
         device:
           - name: "{{ create_device_name }}"
             address: "{{ create_device_address }}"
             authgroup: "{{ create_device_authgroup }}"
             device-type: "{{ create_device_device_type }}"
             ned-settings: "{{ create_device_ned_settings }}"
             state:
               admin-state: unlocked
